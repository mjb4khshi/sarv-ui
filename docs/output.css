/*! tailwindcss v4.1.13 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --spacing: 0.25rem;
    --text-xs: 0.75rem;
    --text-xs--line-height: calc(1 / 0.75);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-3xl: 1.875rem;
    --text-3xl--line-height: calc(2.25 / 1.875);
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
    --color-primary: var(--theme-color-primary);
    --color-success: var(--theme-color-success);
    --color-danger: var(--theme-color-danger);
    --color-warn: var(--theme-color-warn);
    --color-info: var(--theme-color-info);
    --color-secondary: var(--theme-color-secondary);
    --color-accent: var(--theme-color-accent);
    --color-neutral: var(--theme-color-neutral);
    --color-base: var(--theme-color-base);
    --color-base-500: var(--theme-color-base-500);
    --color-base-content: var(--theme-color-base-content);
    --radius-checkbox: var(--theme-radius-checkbox);
    --radius-button: var(--theme-radius-button);
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  ::-webkit-calendar-picker-indicator {
    line-height: 1;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .checkbox-mask {
    pointer-events: none;
    position: relative;
    display: flex;
    width: calc(var(--spacing) * 5);
    height: calc(var(--spacing) * 5);
    align-items: center;
    justify-content: center;
    border-radius: var(--radius-checkbox);
    transition: box-shadow 0.25s ease, background-color 0.25s ease, transform 0.25s ease, opacity 0.25s ease;
    &::after {
      content: "";
      position: absolute;
      inset: calc(var(--spacing) * 0);
      z-index: 1;
      border-radius: inherit;
      background-color: currentcolor;
      opacity: 0%;
      transition: transform 0.25s ease, opacity 0.25s ease, box-shadow 0.25s ease;
    }
    .checkbox:not(:checked) ~ & {
      box-shadow: inset 0 0 0 2px var(--color-base-500);
    }
    .checkbox:not(:checked):hover ~ & {
      background-color: var(--color-base-500);
      box-shadow: inset 0 0 0 var(--color-base-500);
    }
    .checkbox:checked ~ & {
      background-color: var(--color-base-500);
    }
    .checkbox:checked ~ &::after {
      transform: scale(1);
      opacity: 1;
      transition-delay: 0ms;
      box-shadow: 0 0 0px currentColor;
      transition: all 0.25s ease;
    }
    .checkbox:checked:hover ~ &::after {
      transform: scale(1);
      opacity: 1;
      transition-delay: 0ms;
      box-shadow: 0 0 2px currentColor;
      transition: all 0.25s ease;
    }
    .checkbox:checked ~ & .checkbox-icon path {
      transition-delay: 200ms;
      stroke-dashoffset: 0;
    }
    .checkbox:checked ~ & .checkbox-icon line {
      transition-delay: 200ms;
      stroke-dashoffset: 0;
    }
    .checkbox:checked ~ & .checkbox-icon polyline {
      transition-delay: 200ms;
      stroke-dashoffset: 0;
    }
    .checkbox:not(:checked) ~ & .checkbox-icon path {
      transition-delay: 0ms;
      stroke-dashoffset: 200;
    }
    .checkbox:not(:checked) ~ & .checkbox-icon line {
      transition-delay: 0ms;
      stroke-dashoffset: 200;
    }
    .checkbox:not(:checked) ~ & .checkbox-icon polyline {
      transition-delay: 0ms;
      stroke-dashoffset: 200;
    }
    .checkbox:not(:checked) ~ &::after {
      box-shadow: 0 0 0 0px currentColor;
      transform: scale(0.8);
      opacity: 0%;
      transition-delay: 500ms;
    }
    .checkbox:checked:disabled ~ & {
      cursor: not-allowed;
      color: var(--color-neutral);
    }
  }
  .radio-mask {
    pointer-events: none;
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: calc(infinity * 1px);
    width: var(--rd-size, 1.25rem);
    height: var(--rd-size, 1.25rem);
    transition: box-shadow 0.25s ease, background-color 0.25s ease, transform 0.25s ease, opacity 0.25s ease;
    &::after {
      content: "";
      position: absolute;
      inset: calc(var(--spacing) * 0);
      border-radius: calc(infinity * 1px);
      background-color: currentcolor;
      transform: scale(0.7);
      opacity: 0;
      transition: transform 0.25s ease, opacity 0.25s ease, box-shadow 0.25s ease;
    }
    .radio:not(:checked) ~ & {
      box-shadow: inset 0 0 0 2px var(--color-base-500);
    }
    .radio:not(:checked):hover ~ & {
      background-color: var(--color-base-500);
      box-shadow: inset 0 0 0 var(--color-base-500);
    }
    .radio:checked ~ & {
      box-shadow: none;
    }
    .radio:checked ~ &::after {
      transform: scale(1);
      opacity: 1;
      box-shadow: 0 0 0px currentColor;
    }
    .radio:checked:hover ~ &::after {
      transform: scale(1);
      opacity: 1;
      box-shadow: 0 0 2px currentColor;
    }
    .radio:checked:disabled ~ & {
      cursor: not-allowed;
      color: var(--color-neutral);
    }
  }
  .checkbox {
    position: absolute;
    inset: calc(var(--spacing) * 0);
    margin: calc(var(--spacing) * 0);
    display: inline;
    cursor: pointer;
    appearance: none;
    opacity: 0%;
    &:not(:checked) ~ .checkbox-mask {
      box-shadow: inset 0 0 0 2px var(--color-base-500);
    }
    &:not(:checked):hover ~ .checkbox-mask {
      background-color: var(--color-base-500);
      box-shadow: inset 0 0 0 var(--color-base-500);
    }
    &:checked ~ .checkbox-mask {
      background-color: var(--color-base-500);
    }
    &:checked ~ .checkbox-mask::after {
      transform: scale(1);
      opacity: 1;
      transition-delay: 0ms;
      box-shadow: 0 0 0px currentColor;
      transition: all 0.25s ease;
    }
    &:checked:hover ~ .checkbox-mask::after {
      transform: scale(1);
      opacity: 1;
      transition-delay: 0ms;
      box-shadow: 0 0 2px currentColor;
      transition: all 0.25s ease;
    }
    &:checked ~ .checkbox-mask .checkbox-icon path {
      transition-delay: 200ms;
      stroke-dashoffset: 0;
    }
    &:checked ~ .checkbox-mask .checkbox-icon line {
      transition-delay: 200ms;
      stroke-dashoffset: 0;
    }
    &:checked ~ .checkbox-mask .checkbox-icon polyline {
      transition-delay: 200ms;
      stroke-dashoffset: 0;
    }
    &:not(:checked) ~ .checkbox-mask .checkbox-icon path {
      transition-delay: 0ms;
      stroke-dashoffset: 200;
    }
    &:not(:checked) ~ .checkbox-mask .checkbox-icon line {
      transition-delay: 0ms;
      stroke-dashoffset: 200;
    }
    &:not(:checked) ~ .checkbox-mask .checkbox-icon polyline {
      transition-delay: 0ms;
      stroke-dashoffset: 200;
    }
    &:not(:checked) ~ .checkbox-mask::after {
      box-shadow: 0 0 0 0px currentColor;
      transform: scale(0.8);
      opacity: 0%;
      transition-delay: 500ms;
    }
    &:disabled {
      cursor: not-allowed;
      opacity: 50%;
    }
    &:checked:disabled ~ .checkbox-mask {
      cursor: not-allowed;
      color: var(--color-neutral);
    }
  }
  .radio {
    position: absolute;
    inset: calc(var(--spacing) * 0);
    margin: calc(var(--spacing) * 0);
    display: inline;
    cursor: pointer;
    appearance: none;
    opacity: 0%;
    &:not(:checked) ~ .radio-mask {
      box-shadow: inset 0 0 0 2px var(--color-base-500);
    }
    &:not(:checked):hover ~ .radio-mask {
      background-color: var(--color-base-500);
      box-shadow: inset 0 0 0 var(--color-base-500);
    }
    &:checked ~ .radio-mask {
      box-shadow: none;
    }
    &:checked ~ .radio-mask::after {
      transform: scale(1);
      opacity: 1;
      box-shadow: 0 0 0px currentColor;
    }
    &:checked:hover ~ .radio-mask::after {
      transform: scale(1);
      opacity: 1;
      box-shadow: 0 0 2px currentColor;
    }
    &:disabled {
      cursor: not-allowed;
      opacity: 50%;
    }
    &:checked:disabled ~ .radio-mask {
      cursor: not-allowed;
      color: var(--color-neutral);
    }
  }
  .checkbox-icon {
    position: absolute;
    z-index: 2;
    height: calc(4/5 * 100%);
    width: calc(4/5 * 100%);
    & path {
      fill: none;
      stroke-width: 2;
      stroke-linecap: round;
      stroke-linejoin: round;
      stroke-dasharray: 200;
      stroke-dashoffset: 200;
      transition: stroke-dashoffset 1.1s ease-in-out;
    }
    & line {
      fill: none;
      stroke-width: 2;
      stroke-linecap: round;
      stroke-linejoin: round;
      stroke-dasharray: 200;
      stroke-dashoffset: 200;
      transition: stroke-dashoffset 1.1s ease-in-out;
    }
    & polyline {
      fill: none;
      stroke-width: 2;
      stroke-linecap: round;
      stroke-linejoin: round;
      stroke-dasharray: 200;
      stroke-dashoffset: 200;
      transition: stroke-dashoffset 1.1s ease-in-out;
    }
    .checkbox:checked ~ .checkbox-mask & path {
      transition-delay: 200ms;
      stroke-dashoffset: 0;
    }
    .checkbox:checked ~ .checkbox-mask & line {
      transition-delay: 200ms;
      stroke-dashoffset: 0;
    }
    .checkbox:checked ~ .checkbox-mask & polyline {
      transition-delay: 200ms;
      stroke-dashoffset: 0;
    }
    .checkbox:not(:checked) ~ .checkbox-mask & path {
      transition-delay: 0ms;
      stroke-dashoffset: 200;
    }
    .checkbox:not(:checked) ~ .checkbox-mask & line {
      transition-delay: 0ms;
      stroke-dashoffset: 200;
    }
    .checkbox:not(:checked) ~ .checkbox-mask & polyline {
      transition-delay: 0ms;
      stroke-dashoffset: 200;
    }
  }
  .checkbox-wrap {
    position: relative;
    display: inline-block;
    width: fit-content;
    height: fit-content;
  }
  .radio-wrap {
    position: relative;
    display: inline-block;
    width: fit-content;
    height: fit-content;
  }
  .mb-4 {
    margin-bottom: calc(var(--spacing) * 4);
  }
  .mb-8 {
    margin-bottom: calc(var(--spacing) * 8);
  }
  .btn {
    display: flex;
    cursor: pointer;
    align-items: center;
    justify-content: center;
    gap: calc(var(--spacing) * 0);
    border-radius: var(--radius-button);
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: 200ms;
    transition-duration: 200ms;
    padding: 0.5rem 1rem;
    &:hover {
      transform: scale(1.02);
    }
    &:active {
      transform: scale(0.98);
    }
  }
  .badge {
    display: inline-flex;
    align-items: center;
    border-radius: calc(infinity * 1px);
    padding-inline: calc(var(--spacing) * 2);
    padding-block: calc(var(--spacing) * 0.5);
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
  .flex {
    display: flex;
  }
  .checkbox-mask {
    width: var(--cb-size, 1.25rem);
    height: var(--cb-size, 1.25rem);
  }
  .flex-wrap {
    flex-wrap: wrap;
  }
  .items-center {
    align-items: center;
  }
  .justify-between {
    justify-content: space-between;
  }
  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }
  .gap-3 {
    gap: calc(var(--spacing) * 3);
  }
  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }
  .gap-6 {
    gap: calc(var(--spacing) * 6);
  }
  .space-y-12 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 12) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 12) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .rounded {
    border-radius: 0.25rem;
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .btn-outline-accent {
    border: 2px solid var(--theme-color-accent);
    color: var(--theme-color-accent);
    background-color: transparent;
    &:hover {
      background-color: var(--theme-color-accent);
      color: var(--theme-color-accent-content);
    }
  }
  .btn-outline-danger {
    border: 2px solid var(--theme-color-danger);
    color: var(--theme-color-danger);
    background-color: transparent;
    &:hover {
      background-color: var(--theme-color-danger);
      color: var(--theme-color-danger-content);
    }
  }
  .btn-outline-info {
    border: 2px solid var(--theme-color-info);
    color: var(--theme-color-info);
    background-color: transparent;
    &:hover {
      background-color: var(--theme-color-info);
      color: var(--theme-color-info-content);
    }
  }
  .btn-outline-neutral {
    border: 2px solid var(--theme-color-neutral);
    color: var(--theme-color-neutral);
    background-color: transparent;
    &:hover {
      background-color: var(--theme-color-neutral);
      color: var(--theme-color-neutral-content);
    }
  }
  .btn-outline-primary {
    border: 2px solid var(--theme-color-primary);
    color: var(--theme-color-primary);
    background-color: transparent;
    &:hover {
      background-color: var(--theme-color-primary);
      color: var(--theme-color-primary-content);
    }
  }
  .btn-outline-secondary {
    border: 2px solid var(--theme-color-secondary);
    color: var(--theme-color-secondary);
    background-color: transparent;
    &:hover {
      background-color: var(--theme-color-secondary);
      color: var(--theme-color-secondary-content);
    }
  }
  .btn-outline-success {
    border: 2px solid var(--theme-color-success);
    color: var(--theme-color-success);
    background-color: transparent;
    &:hover {
      background-color: var(--theme-color-success);
      color: var(--theme-color-success-content);
    }
  }
  .btn-outline-warn {
    border: 2px solid var(--theme-color-warn);
    color: var(--theme-color-warn);
    background-color: transparent;
    &:hover {
      background-color: var(--theme-color-warn);
      color: var(--theme-color-warn-content);
    }
  }
  .btn-soft-accent {
    background-color: var(--color-accent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(
    in oklab,
    var(--color-accent) 30%,
    var(--color-base)
  );
    }
    color: var(--theme-color-accent);
    &:hover {
      background-color: var(--theme-color-accent);
      color: var(--theme-color-accent-content);
    }
  }
  .btn-soft-danger {
    background-color: var(--color-danger);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(
    in oklab,
    var(--color-danger) 30%,
    var(--color-base)
  );
    }
    color: var(--theme-color-danger);
    &:hover {
      background-color: var(--theme-color-danger);
      color: var(--theme-color-danger-content);
    }
  }
  .btn-soft-info {
    background-color: var(--color-info);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(
    in oklab,
    var(--color-info) 30%,
    var(--color-base)
  );
    }
    color: var(--theme-color-info);
    &:hover {
      background-color: var(--theme-color-info);
      color: var(--theme-color-info-content);
    }
  }
  .btn-soft-neutral {
    background-color: oklch(87% 0 0);
    color: var(--theme-color-neutral);
    &:hover {
      background-color: var(--theme-color-neutral);
      color: var(--theme-color-neutral-content);
    }
  }
  .btn-soft-primary {
    background-color: var(--color-primary);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(
    in oklab,
    var(--color-primary) 30%,
    var(--color-base)
  );
    }
    color: var(--theme-color-primary);
    &:hover {
      background-color: var(--theme-color-primary);
      color: var(--theme-color-primary-content);
    }
  }
  .btn-soft-secondary {
    background-color: var(--color-secondary);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(
    in oklab,
    var(--color-secondary) 30%,
    var(--color-base)
  );
    }
    color: var(--theme-color-secondary);
    &:hover {
      background-color: var(--theme-color-secondary);
      color: var(--theme-color-secondary-content);
    }
  }
  .btn-soft-success {
    background-color: var(--color-success);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(
    in oklab,
    var(--color-success) 30%,
    var(--color-base)
  );
    }
    color: var(--theme-color-success);
    &:hover {
      background-color: var(--theme-color-success);
      color: var(--theme-color-success-content);
    }
  }
  .btn-soft-warn {
    background-color: var(--color-warn);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(
    in oklab,
    var(--color-warn) 30%,
    var(--color-base)
  );
    }
    color: var(--theme-color-warn);
    &:hover {
      background-color: var(--theme-color-warn);
      color: var(--theme-color-warn-content);
    }
  }
  .badge-outline-accent {
    border: 1px solid var(--theme-color-accent);
    color: var(--theme-color-accent);
    background-color: transparent;
  }
  .badge-outline-danger {
    border: 1px solid var(--theme-color-danger);
    color: var(--theme-color-danger);
    background-color: transparent;
  }
  .badge-outline-info {
    border: 1px solid var(--theme-color-info);
    color: var(--theme-color-info);
    background-color: transparent;
  }
  .badge-outline-primary {
    border: 1px solid var(--theme-color-primary);
    color: var(--theme-color-primary);
    background-color: transparent;
  }
  .badge-outline-secondary {
    border: 1px solid var(--theme-color-secondary);
    color: var(--theme-color-secondary);
    background-color: transparent;
  }
  .badge-outline-success {
    border: 1px solid var(--theme-color-success);
    color: var(--theme-color-success);
    background-color: transparent;
  }
  .badge-outline-warn {
    border: 1px solid var(--theme-color-warn);
    color: var(--theme-color-warn);
    background-color: transparent;
  }
  .badge-accent {
    background-color: var(--theme-color-accent);
    color: var(--theme-color-accent-content);
  }
  .badge-danger {
    background-color: var(--theme-color-danger);
    color: var(--theme-color-danger-content);
  }
  .badge-info {
    background-color: var(--theme-color-info);
    color: var(--theme-color-info-content);
  }
  .badge-primary {
    background-color: var(--theme-color-primary);
    color: var(--theme-color-primary-content);
  }
  .badge-secondary {
    background-color: var(--theme-color-secondary);
    color: var(--theme-color-secondary-content);
  }
  .badge-soft-accent {
    background-color: var(--color-accent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(
    in oklab,
    var(--color-accent) 30%,
    var(--color-base)
  );
    }
    color: var(--theme-color-accent);
  }
  .badge-soft-danger {
    background-color: var(--color-danger);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(
    in oklab,
    var(--color-danger) 30%,
    var(--color-base)
  );
    }
    color: var(--theme-color-danger);
  }
  .badge-soft-info {
    background-color: var(--color-info);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(
    in oklab,
    var(--color-info) 30%,
    var(--color-base)
  );
    }
    color: var(--theme-color-info);
  }
  .badge-soft-primary {
    background-color: var(--color-primary);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(
    in oklab,
    var(--color-primary) 30%,
    var(--color-base)
  );
    }
    color: var(--theme-color-primary);
  }
  .badge-soft-secondary {
    background-color: var(--color-secondary);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(
    in oklab,
    var(--color-secondary) 30%,
    var(--color-base)
  );
    }
    color: var(--theme-color-secondary);
  }
  .badge-soft-success {
    background-color: var(--color-success);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(
    in oklab,
    var(--color-success) 30%,
    var(--color-base)
  );
    }
    color: var(--theme-color-success);
  }
  .badge-soft-warn {
    background-color: var(--color-warn);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(
    in oklab,
    var(--color-warn) 30%,
    var(--color-base)
  );
    }
    color: var(--theme-color-warn);
  }
  .badge-success {
    background-color: var(--theme-color-success);
    color: var(--theme-color-success-content);
  }
  .badge-warn {
    background-color: var(--theme-color-warn);
    color: var(--theme-color-warn-content);
  }
  .btn-accent {
    background-color: var(--theme-color-accent);
    color: var(--theme-color-accent-content);
  }
  .btn-danger {
    background-color: var(--theme-color-danger);
    color: var(--theme-color-danger-content);
  }
  .btn-info {
    background-color: var(--theme-color-info);
    color: var(--theme-color-info-content);
  }
  .btn-neutral {
    background-color: var(--theme-color-neutral);
    color: var(--theme-color-neutral-content);
  }
  .btn-primary {
    background-color: var(--theme-color-primary);
    color: var(--theme-color-primary-content);
  }
  .btn-secondary {
    background-color: var(--theme-color-secondary);
    color: var(--theme-color-secondary-content);
  }
  .btn-success {
    background-color: var(--theme-color-success);
    color: var(--theme-color-success-content);
  }
  .btn-warn {
    background-color: var(--theme-color-warn);
    color: var(--theme-color-warn-content);
  }
  .bg-base {
    background-color: var(--color-base);
  }
  .checkbox-accent {
    color: var(--theme-color-accent);
    stroke: var(--theme-color-accent-content);
  }
  .checkbox-danger {
    color: var(--theme-color-danger);
    stroke: var(--theme-color-danger-content);
  }
  .checkbox-info {
    color: var(--theme-color-info);
    stroke: var(--theme-color-info-content);
  }
  .checkbox-primary {
    color: var(--theme-color-primary);
    stroke: var(--theme-color-primary-content);
  }
  .checkbox-success {
    color: var(--theme-color-success);
    stroke: var(--theme-color-success-content);
  }
  .checkbox-warn {
    color: var(--theme-color-warn);
    stroke: var(--theme-color-warn-content);
  }
  .p-8 {
    padding: calc(var(--spacing) * 8);
  }
  .px-3 {
    padding-inline: calc(var(--spacing) * 3);
  }
  .py-1 {
    padding-block: calc(var(--spacing) * 1);
  }
  .text-3xl {
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
  }
  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .radio-accent {
    & ~ .radio-mask {
      color: var(--theme-color-accent);
    }
  }
  .radio-danger {
    & ~ .radio-mask {
      color: var(--theme-color-danger);
    }
  }
  .radio-info {
    & ~ .radio-mask {
      color: var(--theme-color-info);
    }
  }
  .radio-primary {
    & ~ .radio-mask {
      color: var(--theme-color-primary);
    }
  }
  .radio-secondary {
    & ~ .radio-mask {
      color: var(--theme-color-secondary);
    }
  }
  .radio-success {
    & ~ .radio-mask {
      color: var(--theme-color-success);
    }
  }
  .radio-warn {
    & ~ .radio-mask {
      color: var(--theme-color-warn);
    }
  }
  .text-base-content {
    color: var(--color-base-content);
  }
}
:root {
  --theme-color-primary: #0066a4;
  --theme-color-primary: oklch(49.417% 0.12628 245.712);
  --theme-color-success: #46c93a;
  --theme-color-success: oklch(73.664% 0.21363 141.933);
  --theme-color-warn: #ffba00;
  --theme-color-warn: oklch(0.831 0.171 81.54);
  --theme-color-info: #00a594;
  --theme-color-info: oklch(64.783% 0.11594 182.205);
  --theme-color-accent: #fe28a2;
  --theme-color-accent: oklch(66.572% 0.25691 352.736);
  --theme-color-secondary: #d88f58;
  --theme-color-secondary: oklch(71.263% 0.1137 56.642);
  --theme-color-danger: #ff4757;
  --theme-color-danger: oklch(66.889% 0.21892 20.897);
  --theme-color-neutral: #a2a2a2;
  --theme-color-neutral: oklch(71.224% 0.00008 271.152);
  --theme-color-base: #ffffff;
  --theme-color-base: oklch(100% 0.00011 271.152);
  --theme-color-neutral-dark: #404040;
  --theme-color-neutral-dark: oklch(37.15% 0.00004 271.152);
  --theme-color-neutral-darker: #1e1e1e;
  --theme-color-neutral-darker: oklch(23.503% 0.00003 271.152);
  --theme-color-base-500: #dddddd;
  --theme-color-base-500: oklch(89.755% 0.0001 271.152 / 0.867);
  --theme-color-base-900: #858585;
  --theme-color-base-900: oklch(61.671% 0.00007 271.152);
  --theme-color-primary-content: #ffffff;
  --theme-color-primary-content: oklch(100% 0 0);
  --theme-color-success-content: #ffffff;
  --theme-color-success-content: oklch(100% 0 0);
  --theme-color-warn-content: #000000;
  --theme-color-warn-content: oklch(0% 0 0);
  --theme-color-info-content: #ffffff;
  --theme-color-info-content: oklch(100% 0 0);
  --theme-color-accent-content: #ffffff;
  --theme-color-accent-content: oklch(100% 0 0);
  --theme-color-secondary-content: #ffffff;
  --theme-color-secondary-content: oklch(100% 0 0);
  --theme-color-danger-content: #ffffff;
  --theme-color-danger-content: oklch(100% 0 0);
  --theme-color-neutral-content: #ffffff;
  --theme-color-neutral-content: oklch(100% 0 0);
  --theme-color-base-content: #000000;
  --theme-color-base-content: oklch(0% 0 0)

  /* shadow color (whrite rgb channel like this)*/
  --theme-shadow-color: 0, 0, 0;
  --theme-radius-checkbox: 40%;
  --theme-radius-button: 0.3rem;
  --theme-radius-card: 0.2rem;
}
[datatheme=persian-dark] {
  --theme-color-primary: #0066a4;
  --theme-color-primary: oklch(49.417% 0.12628 245.712);
  --theme-color-success: #46c93a;
  --theme-color-success: oklch(73.664% 0.21363 141.933);
  --theme-color-warn: #ffba00;
  --theme-color-warn: oklch(0.831 0.171 81.54);
  --theme-color-info: #00a594;
  --theme-color-info: oklch(64.783% 0.11594 182.205);
  --theme-color-accent: #fe28a2;
  --theme-color-accent: oklch(66.572% 0.25691 352.736);
  --theme-color-secondary: #d88f58;
  --theme-color-secondary: oklch(71.263% 0.1137 56.642);
  --theme-color-danger: #ff4757;
  --theme-color-danger: oklch(66.889% 0.21892 20.897);
  --theme-color-neutral: #a2a2a2;
  --theme-color-neutral: oklch(71.224% 0.00008 271.152);
  --theme-color-base: #000000;
  --theme-color-base: oklch(0% 0 0);
  --theme-color-neutral-dark: #404040;
  --theme-color-neutral-dark: oklch(37.15% 0.00004 271.152);
  --theme-color-neutral-darker: #1e1e1e;
  --theme-color-neutral-darker: oklch(23.503% 0.00003 271.152);
  --theme-color-base-500: #222222;
  --theme-color-base-500: oklch(27.274% 0.00003 271.152 / 0.867);
  --theme-color-base-900: #858585;
  --theme-color-base-900: oklch(61.671% 0.00007 271.152);
  --theme-color-primary-content: #ffffff;
  --theme-color-primary-content: oklch(100% 0 0);
  --theme-color-success-content: #ffffff;
  --theme-color-success-content: oklch(100% 0 0);
  --theme-color-warn-content: #000000;
  --theme-color-warn-content: oklch(0% 0 0);
  --theme-color-info-content: #ffffff;
  --theme-color-info-content: oklch(100% 0 0);
  --theme-color-accent-content: #ffffff;
  --theme-color-accent-content: oklch(100% 0 0);
  --theme-color-secondary-content: #ffffff;
  --theme-color-secondary-content: oklch(100% 0 0);
  --theme-color-danger-content: #ffffff;
  --theme-color-danger-content: oklch(100% 0 0);
  --theme-color-neutral-content: #ffffff;
  --theme-color-neutral-content: oklch(100% 0 0);
  --theme-color-base-content: #ffffff;
  --theme-color-base-content: oklch(100% 0 0);
  --theme-shadow-color: 0, 0, 0;
  --theme-radius-checkbox: 40%;
  --theme-radius-button: 0.3rem;
  --theme-radius-card: 0.2rem;
}
[datatheme=persian-light-sharp] {
  --theme-color-primary: #0066a4;
  --theme-color-primary: oklch(49.417% 0.12628 245.712);
  --theme-color-success: #46c93a;
  --theme-color-success: oklch(73.664% 0.21363 141.933);
  --theme-color-warn: #ffba00;
  --theme-color-warn: oklch(0.831 0.171 81.54);
  --theme-color-info: #00a594;
  --theme-color-info: oklch(64.783% 0.11594 182.205);
  --theme-color-accent: #fe28a2;
  --theme-color-accent: oklch(66.572% 0.25691 352.736);
  --theme-color-secondary: #d88f58;
  --theme-color-secondary: oklch(71.263% 0.1137 56.642);
  --theme-color-danger: #ff4757;
  --theme-color-danger: oklch(66.889% 0.21892 20.897);
  --theme-color-neutral: #a2a2a2;
  --theme-color-neutral: oklch(71.224% 0.00008 271.152);
  --theme-color-base: #ffffff;
  --theme-color-base: oklch(100% 0.00011 271.152);
  --theme-color-neutral-dark: #404040;
  --theme-color-neutral-dark: oklch(37.15% 0.00004 271.152);
  --theme-color-neutral-darker: #1e1e1e;
  --theme-color-neutral-darker: oklch(23.503% 0.00003 271.152);
  --theme-color-base-500: #dddddd;
  --theme-color-base-500: oklch(89.755% 0.0001 271.152 / 0.867);
  --theme-color-base-900: #858585;
  --theme-color-base-900: oklch(61.671% 0.00007 271.152);
  --theme-color-primary-content: #ffffff;
  --theme-color-primary-content: oklch(100% 0 0);
  --theme-color-success-content: #ffffff;
  --theme-color-success-content: oklch(100% 0 0);
  --theme-color-warn-content: #000000;
  --theme-color-warn-content: oklch(0% 0 0);
  --theme-color-info-content: #ffffff;
  --theme-color-info-content: oklch(100% 0 0);
  --theme-color-accent-content: #ffffff;
  --theme-color-accent-content: oklch(100% 0 0);
  --theme-color-secondary-content: #ffffff;
  --theme-color-secondary-content: oklch(100% 0 0);
  --theme-color-danger-content: #ffffff;
  --theme-color-danger-content: oklch(100% 0 0);
  --theme-color-neutral-content: #ffffff;
  --theme-color-neutral-content: oklch(100% 0 0);
  --theme-color-base-content: #000000;
  --theme-color-base-content: oklch(0% 0 0)

  /* shadow color (whrite rgb channel like this)*/
  --theme-shadow-color: 0, 0, 0;
  --theme-radius-checkbox: 0;
  --theme-radius-button: 0;
  --theme-radius-card: 0;
}
[datatheme=persian-dark-sharp] {
  --theme-color-primary: #0066a4;
  --theme-color-primary: oklch(49.417% 0.12628 245.712);
  --theme-color-success: #46c93a;
  --theme-color-success: oklch(73.664% 0.21363 141.933);
  --theme-color-warn: #ffba00;
  --theme-color-warn: oklch(0.831 0.171 81.54);
  --theme-color-info: #00a594;
  --theme-color-info: oklch(64.783% 0.11594 182.205);
  --theme-color-accent: #fe28a2;
  --theme-color-accent: oklch(66.572% 0.25691 352.736);
  --theme-color-secondary: #d88f58;
  --theme-color-secondary: oklch(71.263% 0.1137 56.642);
  --theme-color-danger: #ff4757;
  --theme-color-danger: oklch(66.889% 0.21892 20.897);
  --theme-color-neutral: #a2a2a2;
  --theme-color-neutral: oklch(71.224% 0.00008 271.152);
  --theme-color-base: #000000;
  --theme-color-base: oklch(0% 0 0);
  --theme-color-neutral-dark: #404040;
  --theme-color-neutral-dark: oklch(37.15% 0.00004 271.152);
  --theme-color-neutral-darker: #1e1e1e;
  --theme-color-neutral-darker: oklch(23.503% 0.00003 271.152);
  --theme-color-base-500: #222222;
  --theme-color-base-500: oklch(27.274% 0.00003 271.152 / 0.867);
  --theme-color-base-900: #858585;
  --theme-color-base-900: oklch(61.671% 0.00007 271.152);
  --theme-color-primary-content: #ffffff;
  --theme-color-primary-content: oklch(100% 0 0);
  --theme-color-success-content: #ffffff;
  --theme-color-success-content: oklch(100% 0 0);
  --theme-color-warn-content: #000000;
  --theme-color-warn-content: oklch(0% 0 0);
  --theme-color-info-content: #ffffff;
  --theme-color-info-content: oklch(100% 0 0);
  --theme-color-accent-content: #ffffff;
  --theme-color-accent-content: oklch(100% 0 0);
  --theme-color-secondary-content: #ffffff;
  --theme-color-secondary-content: oklch(100% 0 0);
  --theme-color-danger-content: #ffffff;
  --theme-color-danger-content: oklch(100% 0 0);
  --theme-color-neutral-content: #ffffff;
  --theme-color-neutral-content: oklch(100% 0 0);
  --theme-color-base-content: #ffffff;
  --theme-color-base-content: oklch(100% 0 0);
  --theme-shadow-color: 0, 0, 0;
  --theme-radius-checkbox: 0;
  --theme-radius-button: 0;
  --theme-radius-card: 0;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-font-weight: initial;
      --tw-duration: initial;
      --tw-space-y-reverse: 0;
      --tw-border-style: solid;
    }
  }
}
